! function (a, b) {
	"use strict";

	function c() {
		a(this).removeAttr("tabindex").off("blur focusout", c)
	}
	var d, e, f, g, h, i = b.cache.$body = a(document.body),
		j = b.cache.$html = a(document.documentElement),
		k = b.cache.$window = a(window),
		l = b.cache.$document = a(document),
		m = b.cache.$htmlBody = a("html, body"),
		n = b.cache.$mainBody = a(document.getElementById("zf--main-body")),
		o = (b.cache.$allMenuContainers = a(".zf--menu-container"), document.body.className, document.documentElement.className),
		p = !1,
		q = null,
		r = null,
		s = !1,
		t = [],
		u = [],
		v = b.helpers.throwError = function (a) {
			try {
				throw new Error(a)
			} catch (a) {
				console.error(a.stack)
			}
		},
		w = (b.helpers.nodeHasClass = function (a, b) {
			return a ? (" " + a.className + " ").replace(/[\n\t]/g, " ").indexOf(" " + b + " ") > -1 : void v("Element undefined")
		}, b.helpers.nodeRemoveClass = function (a, b) {
			return a ? (a.classList ? a.classList.remove(b) : a.className = a.className.replace(new RegExp("[ ]?" + b, "g"), ""), a) : void v("Element undefined")
		}),
		x = (b.helpers.nodeAddClass = function (a, b) {
			return a ? (a.classList ? a.classList.add(b) : a.className += " " + b, a) : void v("Element undefined")
		}, b.helpers.nodeRemove = function (a) {
			return a ? a.parentNode.removeChild(a) : void v("Element undefined")
		}, b.helpers.nodeAppendChild = function (a, b, c) {
			if (!a) return void v("Element undefined");
			var d = document.createElement(b);
			return void 0 !== c && (d.innerHTML = c), a.appendChild(d), d
		}, b.helpers.forceElementFocus = function (a) {
			a.attr("tabindex", -1).focus().on("blur focusout", c)
		});
	b.helpers.ctrlARIA = function (a, b) {
		if (a && a.nodeType) {
			if ("alive" === b) a.setAttribute("aria-live", "assertive"), a.setAttribute("aria-relevant", "all"), a.setAttribute("aria-atomic", "true");
			else if ("off" === b) a.setAttribute("aria-live", "off"), a.removeAttribute("aria-relevant"), a.removeAttribute("aria-atomic");
			else if ("reset" === b) return void setTimeout(function () {
				a.removeAttribute("aria-live"), a.removeAttribute("aria-relevant"), a.removeAttribute("aria-atomic")
			}, 0);
			a.offsetWidth
		}
	}, b.actions = {
		hideActiveToolboxPanel: function () {
			null !== q && (q[0].contains(document.activeElement) && x(r), q.removeClass("zf--active"), r.removeClass("zf--active").attr("aria-expanded", "false"), q = null, r = null)
		},
		showAlertsPanel: function () {
			s || b.params.alertsPanelCookieAware && b.helpers.getCookie("AlertsPanel") || (b.helpers.nodeRemoveClass(b.cache.node_alertsPanel, "removed"), b.cache.node_alertsPanel.offsetWidth, b.helpers.nodeAddClass(b.cache.node_alertsPanel, "zf--active"), s = !0)
		},
		hideAlertsPanel: function () {
			s && (b.helpers.nodeRemoveClass(b.cache.node_alertsPanel, "zf--active"), setTimeout(function () {
				b.helpers.nodeAddClass(b.cache.node_alertsPanel, "removed")
			}, 800), b.helpers.setCookie("AlertsPanel", "closed"), s = !1)
		},
		checkResetAccessibilityButtonVisibility: function () {
			"default" !== b.self.theme || "default" !== b.self.rootFontFamily || "default" !== b.self.customLayoutWidth || "default" !== b.self.lineHeight || "default" !== b.self.currentFontSize ? f.addClass("zf--active") : f.removeClass("zf--active")
		},
		resetAccessibilityOptions: function () {
			b.actions.revertRootFontSize(), b.actions.setTheme("default"), b.actions.setRootFontFamily("default"), b.actions.resetCustomLayoutWidth(), b.actions.resetLineHeight()
		},
		increaseRootFontSize: function () {
			!p && b.params.enableFontSizeRelativizer && b.actions.applyFontSizeRelativizer(), "default" === b.self.currentFontSize && (b.self.currentFontSize = b.params.defaultFontSize), b.self.currentFontSize = b.self.currentFontSize + 10, b.self.currentFontSize > 400 && (b.self.currentFontSize = 400), b.actions.updateRootFontSize()
		},
		decreaseRootFontSize: function () {
			!p && b.params.enableFontSizeRelativizer && b.actions.applyFontSizeRelativizer(), "default" === b.self.currentFontSize && (b.self.currentFontSize = b.params.defaultFontSize), b.self.currentFontSize = b.self.currentFontSize - 10, b.self.currentFontSize < 40 && (b.self.currentFontSize = 40), b.actions.updateRootFontSize()
		},
		revertRootFontSize: function () {
			b.self.currentFontSize = b.params.defaultFontSize, b.actions.updateRootFontSize()
		},
		updateRootFontSize: function () {
			b.self.currentFontSize === b.params.defaultFontSize ? (b.self.currentFontSize = "default", document.documentElement.style.fontSize = "") : document.documentElement.style.fontSize = b.self.currentFontSize + "%", b.actions.checkForcedOneColumnGridApplicatibility(), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		increaseLayoutWidth: function () {
			"default" === b.self.customLayoutWidth && (b.self.customLayoutWidth = b.params.defaultLayoutWidth), b.self.customLayoutWidth += 100, b.self.customLayoutWidth < 600 && (b.self.customLayoutWidth = 600), b.self.customLayoutWidth > (window.innerWidth || document.documentElement.clientWidth) && (b.self.customLayoutWidth = window.innerWidth || document.documentElement.clientWidth), b.cache.customLayoutWidthStyle.innerHTML = ".zf--encloser[class]{max-width:" + b.self.customLayoutWidth + "px}", b.actions.checkForcedOneColumnGridApplicatibility(), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		decreaseLayoutWidth: function () {
			"default" === b.self.customLayoutWidth && (b.self.customLayoutWidth = b.params.defaultLayoutWidth), b.self.customLayoutWidth > (window.innerWidth || document.documentElement.clientWidth) && (b.self.customLayoutWidth = window.innerWidth || document.documentElement.clientWidth), b.self.customLayoutWidth -= 100, b.self.customLayoutWidth < 600 && (b.self.customLayoutWidth = 600), b.cache.customLayoutWidthStyle.innerHTML = ".zf--encloser[class]{max-width:" + b.self.customLayoutWidth + "px}", b.actions.checkForcedOneColumnGridApplicatibility(), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		resetCustomLayoutWidth: function () {
			"default" !== b.self.customLayoutWidth && (b.self.customLayoutWidth = "default", b.cache.customLayoutWidthStyle.innerHTML = "", b.actions.checkForcedOneColumnGridApplicatibility(), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings())
		},
		increaseLineHeight: function () {
			"sm" === b.self.lineHeight ? b.self.lineHeight = "default" : "default" === b.self.lineHeight ? b.self.lineHeight = "lg" : "lg" === b.self.lineHeight && (b.self.lineHeight = "xl"), "default" === b.self.lineHeight ? document.documentElement.removeAttribute("data-zf--line-height") : document.documentElement.setAttribute("data-zf--line-height", b.self.lineHeight), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		decreaseLineHeight: function () {
			"xl" === b.self.lineHeight ? b.self.lineHeight = "lg" : "lg" === b.self.lineHeight ? b.self.lineHeight = "default" : "default" === b.self.lineHeight && (b.self.lineHeight = "sm"), "default" === b.self.lineHeight ? document.documentElement.removeAttribute("data-zf--line-height") : document.documentElement.setAttribute("data-zf--line-height", b.self.lineHeight), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		resetLineHeight: function () {
			b.self.lineHeight = "default", document.documentElement.removeAttribute("data-zf--line-height"), b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
		},
		saveUserSettings: function () {
			b.helpers.setCookie("Theme", b.self.theme, "session-cookie"), b.helpers.setCookie("CustomLayoutWidth", b.self.customLayoutWidth), b.helpers.setCookie("FontSize", b.self.currentFontSize), b.helpers.setCookie("FontFamily", b.self.rootFontFamily), b.helpers.setCookie("LineHeight", b.self.lineHeight)
		},
		setTheme: function (a) {
			if (a !== b.self.theme) {
				if ("default" === a) "low-brightness" === b.self.theme && b.actions.resetLowBrightnessTheme(), "inverted" === b.self.theme && b.actions.resetInvertedTheme();
				else if ("low-brightness" === a) "inverted" === b.self.theme && b.actions.resetInvertedTheme(), b.actions.applyLowBrightnessTheme();
				else {
					if ("inverted" !== a) return;
					"low-brightness" === b.self.theme && b.actions.resetLowBrightnessTheme(), b.actions.applyInvertedTheme()
				}
				i.removeClass("zf--theme-" + b.self.theme).addClass("zf--theme-" + a), b.self.theme = a, b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()
			}
		},
		applyLowBrightnessTheme: function () {
			if (!(o.indexOf("lt-ie9") > -1)) {
				var a, c = document.querySelectorAll('[id*="zf--"], [class*="zf--"], #zf--main-article div');
				document.body.offsetWidth, "inverted" !== b.self.theme && (document.body.className += " zf--transition-medium-all-deep");
				for (var d = c.length - 1; d >= 0; d--) a = window.getComputedStyle(c[d], null).backgroundColor, a.indexOf("rgb(") || (t.push(c[d]), a = a.replace("rgb(", "").replace(")", "").split(","), parseInt(a[0]) > 220 && parseInt(a[1]) > 220 && parseInt(a[2]) > 220 && (c[d].style.backgroundColor = "rgb(" + (a[0] - 40) + "," + (a[1] - 40) + "," + (a[2] - 40) + ")"));
				a = window.getComputedStyle(document.body, null).backgroundColor, a.indexOf("rgb(") || (t.push(document.body), a = a.replace("rgb(", "").replace(")", "").split(","), parseInt(a[0]) > 220 && parseInt(a[1]) > 220 && parseInt(a[2]) > 220 && (document.body.style.backgroundColor = "#A0A0A0")), "inverted" !== b.self.theme && setTimeout(function () {
					document.body.className = document.body.className.replace(" zf--transition-medium-all-deep", "")
				}, 800)
			}
		},
		resetLowBrightnessTheme: function () {
			for (var a = t.length - 1; a >= 0; a--) t[a].style.backgroundColor = "";
			t = []
		},
		applyInvertedTheme: function () {
			if (o.indexOf("zf--supports-css3-filter") !== -1) {
				var a, b = document.querySelectorAll('div[id*="zf--"]');
				document.body.offsetWidth;
				for (var c = b.length - 1; c >= 0; c--) a = window.getComputedStyle(b[c], null).backgroundColor, a.indexOf("rgb(") || (u.push(b[c]), a = a.replace("rgb(", "").replace(")", "").split(","), parseInt(a[0]) > 180 && parseInt(a[1]) > 180 && parseInt(a[2]) > 180 && (b[c].style.backgroundColor = "#FFF"))
			}
		},
		resetInvertedTheme: function () {
			if (u.length > 0) {
				for (var a = u.length - 1; a >= 0; a--) u[a].style.backgroundColor = "";
				u = []
			}
		},
		setRootFontFamily: function (a) {
			a !== b.self.rootFontFamily && ("default" !== a && "serif" !== a && "sans-serif" !== a && "bold" !== a || (i.removeClass("zf--legibility-" + b.self.rootFontFamily).addClass("zf--legibility-" + a), b.self.rootFontFamily = a, b.actions.checkResetAccessibilityButtonVisibility(), b.actions.saveUserSettings()))
		},
		applyFontSizeRelativizer: function () {
			if (!(o.indexOf("lt-ie9") > -1)) {
				var c, d, e, f = [],
					g = [],
					h = document.styleSheets,
					i = [];
				for (c = h.length - 1; c >= 0; c--)
					if (!(h[c].href && h[c].href.indexOf("zf/assets/css") > -1)) {
						try {
							i = h[c].rules || h[c].cssRules
						} catch (a) {
							continue
						}
						if (i)
							for (d = i.length - 1; d >= 0; d--) i[d].style && (e = i[d].style.fontSize) && (e.indexOf("px") > -1 || e.indexOf("pt") > -1) && (f.push(i[d].selectorText), g.push(parseInt(e)))
					}
				var j, k, l = document.getElementsByClassName("zf--guest-view");
				for (c = l.length - 1; c >= 0; c--)
					for (j = l[c].getElementsByTagName("*"), d = j.length - 1; d >= 0; d--)(k = j[d].style.fontSize) && (k.indexOf("px") > -1 || k.indexOf("pt") > -1) && (f.push(j[d]), g.push(parseInt(k)));
				var m, n = parseInt(window.getComputedStyle(document.documentElement, null).fontSize),
					q = "default" === b.self.currentFontSize ? 0 : b.self.currentFontSize - b.params.defaultFontSize;
				for (c = f.length - 1; c >= 0; c--) a(f[c]).each(function () {
					this !== document.documentElement && this !== document.body && (m = g[c] / n, m += m * q / 100, this.style.fontSize = m + "rem")
				});
				p = !0
			}
		},
		checkForcedOneColumnGridApplicatibility: function () {
			if ("sm" === b.cache.currentMQ) return void(b.self.forcedOneColumnGrid && (document.body.classList.remove("zf--forced-one-column-grid"), b.self.forcedOneColumnGrid = !1));
			b.self.customLayoutWidth <= 600 || "md" === b.cache.currentMQ && "default" !== b.self.currentFontSize && b.self.currentFontSize >= 180 || "lg" === b.cache.currentMQ && "default" !== b.self.currentFontSize && b.self.currentFontSize >= 200 ? b.self.forcedOneColumnGrid || (document.body.classList.add("zf--forced-one-column-grid"), b.self.forcedOneColumnGrid = !0) : b.self.forcedOneColumnGrid && (document.body.classList.remove("zf--forced-one-column-grid"), b.self.forcedOneColumnGrid = !1)
		}
	}, b.mixins = {
		makeMenuExpandable: function (c, d) {
			if (c && c.nodeType) {
				var e, f, i, j = (a(c), a(c).find(d.parentClassName)),
					k = null,
					l = function (a) {
						a.removeClass("zf--menu-is-expanded").find(".zf--menu-is-expanded").removeClass("zf--menu-is-expanded"), a.find(".zf--expanded").removeClass("zf--expanded").attr("aria-expanded", "false")
					},
					m = function (a) {
						a && a.nodeType && (a.setAttribute("aria-expanded", "false"), a.className = a.className.replace(" zf--expanded", ""))
					};
				j.children("a").attr({
					"aria-haspopup": "true",
					"aria-expanded": "false",
					role: "button"
				}).on("click", function (c) {
					c.preventDefault(), (e = this.parentElement.querySelector("ul")) && (null === k && (k = e, f = this), e.className.indexOf("zf--menu-is-expanded") === -1 ? ("floating" === d.style && "sm" !== b.cache.currentMQ && (i = e.parentElement.parentElement.querySelector(".zf--menu-is-expanded")) && (l(a(i)), m(i.parentElement.querySelector(".zf--expanded")), i === k && (k = e, f = this)), this.setAttribute("aria-expanded", "true"), b.helpers.ctrlARIA(e, "alive"), e.className += " zf--menu-is-expanded", this.className += " zf--expanded", b.helpers.ctrlARIA(e, "reset")) : (l(a(e)), m(this), k === e && (k = null)))
				});
				var n = function (c) {
					"sm" !== b.cache.currentMQ && null !== k && ("touchend" === c.type && (Math.abs(g - c.changedTouches[0].clientX) > 5 || Math.abs(h - c.changedTouches[0].clientY) > 5) || k.parentElement.contains(c.target) || (l(a(k)), m(f), k = null))
				};
				document.addEventListener && "floating" === d.style && (document.body.addEventListener("click", n), document.body.addEventListener("touchend", n))
			}
		}
	}, b.handlers = {
		initialScrollHandler: function () {
			setTimeout(function () {
				0 === k.scrollTop() && "sm" === b.cache.currentMQ && window.scrollTo(0, 1)
			}, 1)
		},
		menusHandler: function () {
			n.find(".zf--menu-container").each(function () {
				b.mixins.makeMenuExpandable(this, {
					parentClassName: ".parent",
					style: "expandable"
				})
			}), b.mixins.makeMenuExpandable(document.getElementById("zf--main-menu"), {
				parentClassName: ".parent",
				style: "floating"
			})
		},
		parentPlatformHandler: function () {
			if ("Joomla3" !== b.params.parentPlatformReleaseClass && "Joomla25" !== b.params.parentPlatformReleaseClass || (a("#zf--search").find("button").removeClass("btn-primary btn button"), a("#zf--login").find("button").removeClass("btn-primary btn button")), b.params.enableSemanticOutline && ("Joomla3" === b.params.parentPlatformReleaseClass || "Joomla25" === b.params.parentPlatformReleaseClass)) {
				var c = document.getElementById("zf--language-switcher--semantic-tag"),
					d = document.getElementById("zf--breadcrumbs--semantic-tag"),
					e = document.getElementById("zf--footer-menu--semantic-tag");
				c && c.querySelector(".mod-languages") && c.setAttribute("aria-label", b.lang.languageOptions), ("Joomla3" === b.params.parentPlatformReleaseClass && d && d.querySelector(".breadcrumb") || "Joomla25" === b.params.parentPlatformReleaseClass && d && d.querySelector(".breadcrumbs")) && (d.setAttribute("aria-label", b.lang.breadcrumbs), d.setAttribute("role", "navigation")), e && e.querySelector("ul.menu") && (e.setAttribute("aria-label", b.lang.footerMenu), e.setAttribute("role", "navigation"))
			}
		},
		mediaQueryHandler: function () {
			b.helpers.detectMQ();
			var a;
			b.cache.$window.on("resize", function () {
				clearTimeout(a), a = setTimeout(b.helpers.detectMQ, 500)
			})
		},
		toolboxHandler: function () {
			var c = a(".zf--toolbox-button");
			a(".zf--toolbox-panel");
			c.click(function (c) {
				var d = a(this);
				if (void 0 !== d.attr("aria-controls")) {
					c.preventDefault();
					var e = d.hasClass("zf--active");
					b.actions.hideActiveToolboxPanel(), e === !1 && (q = a("#" + d.attr("aria-controls")), q.addClass("zf--active"), r = d.addClass("zf--active").attr("aria-expanded", "true"))
				}
			});
			var d = function (a) {
				q && (r[0].parentElement.contains(a.target) || "touchend" === a.type && (Math.abs(g - a.changedTouches[0].clientX) > 5 || Math.abs(h - a.changedTouches[0].clientY) > 5) || b.actions.hideActiveToolboxPanel())
			};
			document.addEventListener && (document.body.addEventListener("click", d), document.body.addEventListener("touchend", d)), l.keydown(function (a) {
				27 === a.keyCode && null !== q && b.actions.hideActiveToolboxPanel()
			})
		},
		alertsPanelHandler: function () {
			b.cache.node_alertsPanel = document.getElementById("zf--alerts-panel"), b.cache.node_alertsPanel && (b.cache.node_alertsPanelOkButton = document.getElementById("zf--alerts-panel--ok-button-container"), b.cache.node_alertsPanelCloseButton = document.getElementById("zf--alerts-panel--close-button-container"), b.cache.node_alertsPanelOkButton && (b.cache.node_alertsPanelOkButton.onclick = b.actions.hideAlertsPanel), b.cache.node_alertsPanelCloseButton && (b.cache.node_alertsPanelCloseButton.onclick = b.actions.hideAlertsPanel), setTimeout(b.actions.showAlertsPanel, 1e3))
		},
		resetAccessibilityButtonHandler: function () {
			f = a(document.getElementById("zf--accessibility-options-reset-button")), f.click(function () {
				b.actions.resetAccessibilityOptions(), w(this, "zf--active")
			}), b.actions.checkResetAccessibilityButtonVisibility()
		},
		fontResizerHandler: function () {
			b.params.enableFontSizeRelativizer && "default" !== b.self.currentFontSize && b.actions.applyFontSizeRelativizer(), document.getElementById("zf--font-resizer") && (document.getElementById("zf--larger-font-button").onclick = b.actions.increaseRootFontSize, document.getElementById("zf--smaller-font-button").onclick = b.actions.decreaseRootFontSize)
		},
		themeSwitcherHandler: function () {
			document.getElementById("zf--theme-switcher") && ("inverted" === b.self.theme && b.actions.applyInvertedTheme(), "low-brightness" === b.self.theme && setTimeout(function () {
				b.actions.applyLowBrightnessTheme()
			}, 500), document.getElementById("zf--low-brightness-theme-button").onclick = function () {
				b.actions.setTheme("low-brightness")
			}, document.getElementById("zf--inverted-theme-button").onclick = function () {
				"inverted" === b.self.theme ? b.actions.setTheme("default") : b.actions.setTheme("inverted")
			})
		},
		legibilitySwitcherHandler: function () {
			document.getElementById("zf--legibility-switcher") && (document.getElementById("zf--legibility-sans-serif-button").onclick = function () {
				b.actions.setRootFontFamily("sans-serif")
			}, document.getElementById("zf--legibility-serif-button").onclick = function () {
				b.actions.setRootFontFamily("serif")
			}, document.getElementById("zf--legibility-bold-button").onclick = function () {
				b.actions.setRootFontFamily("bold")
			})
		},
		scrollToTopAnimationHandler: function () {
			a(document.getElementById("zf--top-anchor")).click(function (c) {
				c.preventDefault(), m.animate({
					scrollTop: 1
				}, "sm" === b.cache.currentMQ ? 1 : 300, function () {
					x(a(document.getElementById("zf--page-top")))
				})
			})
		},
		accordionBlockSnippetHandler: function () {
			n.find(".accordion-block").wrapInner('<div class="accordion-block-inner"></div>').addClass("collapsed").append('<button class="accordion-block-readMore" aria-hidden="true"></button>').css("height", function () {
				return a(this).find(".accordion-block-inner").height() / 100 * 20 + a(this).find(".accordion-block-readMore").innerHeight() + 6
			}).find(".accordion-block-readMore").click(function () {
				var b = a(this).parent();
				b.hasClass("collapsed") ? b.removeClass("collapsed").css("height", function () {
					return b.find(".accordion-block-inner").height() + b.find(".accordion-block-readMore").innerHeight() + 6
				}) : b.addClass("collapsed").css("height", function () {
					return b.find(".accordion-block-inner").height() / 100 * 20 + b.find(".accordion-block-readMore").innerHeight() + 6
				})
			})
		},
		sectionExpandButtonHandler: function () {
			a(".zf--section-expand-button").click(function (b) {
				this.className.indexOf("zf--active") === -1 ? this.setAttribute("aria-expanded", "true") : this.setAttribute("aria-expanded", "false"), a(this).toggleClass("zf--inactive").toggleClass("zf--active"), b.preventDefault()
			})
		},
		mainMenuSectionExpandButtonHandler: function () {
			var c = document.getElementById("zf--main-menu"),
				d = document.getElementById("zf--main-menu-expand-button"),
				e = a(d),
				f = function (a) {
					"sm" === b.cache.currentMQ && d.className.indexOf("zf--active") !== -1 && (c.contains(a.target) || "touchend" === a.type && (Math.abs(g - a.changedTouches[0].clientX) > 5 || Math.abs(h - a.changedTouches[0].clientY) > 5) || e.toggleClass("zf--inactive").toggleClass("zf--active"))
				};
			document.addEventListener && (document.body.addEventListener("click", f), document.body.addEventListener("touchend", f))
		},
		mobileSwitcherHandler: function () {
			b.params.enableMobileSwitcher && (document.getElementById("zf--desktop-site-switcher-link").onclick = function (a) {
				b.cache.metaViewport.setAttribute("content", "width=1024px"), document.documentElement.className += " zf--fixed-meta-viewport", b.helpers.setCookie("MetaViewport", "fixed", "session-cookie"), b.helpers.detectMQ(), a.preventDefault()
			}, document.getElementById("zf--mobile-site-switcher-link").onclick = function (a) {
				b.cache.metaViewport.setAttribute("content", "width=device-width, initial-scale=1.0"), document.documentElement.className = document.documentElement.className.replace(" zf--fixed-meta-viewport", ""), b.helpers.setCookie("MetaViewport", "default", "session-cookie"), b.helpers.detectMQ(), a.preventDefault()
			})
		},
		customLayoutWidthResizerHandler: function () {
			document.getElementById("zf--layout-width-resizer") && (document.getElementById("zf--increase-layout-width").onclick = b.actions.increaseLayoutWidth, document.getElementById("zf--decrease-layout-width").onclick = b.actions.decreaseLayoutWidth)
		},
		lineHeightResizerHandler: function () {
			document.getElementById("zf--line-height-resizer") && (document.getElementById("zf--increase-line-height").onclick = b.actions.increaseLineHeight, document.getElementById("zf--decrease-line-height").onclick = b.actions.decreaseLineHeight)
		},
		forcedOneColumnGridHandler: function () {
			if (document.documentElement.classList) {
				b.self.forcedOneColumnGrid = !1, b.actions.checkForcedOneColumnGridApplicatibility();
				var a, c = function () {
					clearTimeout(a), a = setTimeout(b.actions.checkForcedOneColumnGridApplicatibility, 500)
				};
				b.cache.$window.on("resize", c)
			}
		},
		quickAccessMenuHandler: function () {
			var b = document.getElementById("zf--quick-access-menu");
			if (b) {
				var c = a(b),
					d = c.find("a"),
					e = !1;
				d.on("focus", function () {
					e || c.addClass("zf--active")
				}), d.on("blur", function () {
					setTimeout(function () {
						b.contains(document.activeElement) === !1 && (c.removeClass("zf--active"), e = !1)
					}, 0)
				}), d.on("click", function (b) {
					b.preventDefault();
					var c = a(document.getElementById(this.hash.replace("#", "")));
					m.animate({
						scrollTop: c.offset().top - 25
					}, 300, function () {
						x(c)
					})
				})
			}
		},
		javascriptTooltipsHandler: function () {
			if ("on-snippet" === b.params.tooltipsEnabled) {
				var c, f, g, h, j, m, n, p = a(".show-tooltip"),
					q = !1,
					r = function (a) {
						d = a.pageX + 14 - k.scrollLeft(), e = a.pageY + 16 - k.scrollTop(), d + h > k.width() - 14 && (d = k.width() - h - 14), e + j > l.height() - 16 && (e = l.height() - j - 16), c.css("left", d).css("top", e)
					},
					s = function () {
						if (!b.helpers.hasTriggeredTouchstart) {
							var d = a(this);
							"" === d.attr("title") || q || (q = !0, f = d, g = f.attr("title"), c = a('<span class="zf--tooltip-title" aria-live="off">' + g + "</span>"), i.append(c), f.attr("data-zf--tooltipped-title", g).attr("title", ""), c.fadeIn(460), h = c.outerWidth(), j = c.outerHeight(), c.css("min-width", h + "px"), o.indexOf("ie8") > -1 && c.css("min-width", "0px"), f.mousemove(r))
						}
					},
					t = function () {
						if (!b.helpers.hasTriggeredTouchstart) {
							var d = a(this);
							c && (d.attr("title") || d.attr("title", c.text()).attr("data-zf--tooltipped-title", ""), c.remove(), q = !1)
						}
					},
					u = function () {
						if (!b.helpers.hasTriggeredTouchstart) {
							var g = a(this);
							"" === g.attr("title") || q || (q = !0, f = g, c = a('<span class="zf--tooltip-title zf--with-top-arrow" aria-live="off">' + f.attr("title") + "</span>"), i.append(c), c.fadeIn(460), h = c.outerWidth(), j = c.outerHeight(), m = f.outerWidth(), n = f.outerHeight(), c.css("min-width", h + "px"), o.indexOf("ie8") > -1 && c.css("min-width", "0px"), d = f.offset().left + m / 2 - h / 2 - k.scrollLeft(), e = f.offset().top + n + 9 - k.scrollTop(), d + h > k.width() - 14 && (d = k.width() - h - 14, c.removeClass("zf--with-top-arrow")), e + j > l.height() - 16 && (e = l.height() - j - 16, c.removeClass("zf--with-top-arrow")), d < 0 && (d = 0, c.removeClass("zf--with-top-arrow")), c.css("left", d).css("top", e))
						}
					},
					v = function () {
						b.helpers.hasTriggeredTouchstart || c && (c.remove(), q = !1)
					};
				p.hover(s, t), p.focusin(u).focusout(v)
			}
		},
		detectInvertFilterSupportHandler: function () {
			if (!b.helpers.getCookie("InvertFilterSupport")) {
				var a = document.createElement("a"),
					c = document.createElement("a");
				a.style.filter = "blur(2px)", c.style.webkitFilter = "blur(2px)", j.hasClass("ie") === !1 && (void 0 !== document.documentElement.style.webkitFilter && "blur(2px)" === c.style.webkitFilter || void 0 !== document.documentElement.style.filter && "blur(2px)" === a.style.filter) ? (j.addClass("zf--supports-css3-filter"), b.helpers.setCookie("InvertFilterSupport", "supports")) : (j.addClass("zf--no-support-css3-filter"), b.helpers.setCookie("InvertFilterSupport", "no-support"))
			}
		},
		keyboardOutlineHandler: function () {
			if (!document.addEventListener || !document.documentElement.classList) return void(document.documentElement.className = document.documentElement.className.replace("zf--keyboard-outline", ""));
			var a = !0,
				b = function () {
					a && (a = !1, document.documentElement.classList.remove("zf--keyboard-outline"))
				},
				c = function () {
					a || (a = !0, document.documentElement.classList.add("zf--keyboard-outline"))
				};
			document.body.addEventListener("mousedown", b), document.body.addEventListener("touchstart", b), document.body.addEventListener("keydown", c)
		},
		detectMousemove: function () {
			b.helpers.hasTriggeredMousemove = !1;
			var a = function () {
				b.helpers.hasTriggeredMousemove = !0, document.documentElement.className += " zf--has-triggered-mousemove", b.cache.$body.off("mousemove", a)
			};
			b.cache.$body.on("mousemove", a)
		},
		detectTouchstart: function () {
			b.helpers.hasTriggeredTouchstart = !1;
			var a = function () {
				b.helpers.hasTriggeredTouchstart = !0, document.documentElement.className += " zf--has-triggered-touchstart", b.cache.$body.off("touchstart", a)
			};
			b.cache.$body.on("touchstart", a)
		},
		detectTouchScrolling: function () {
			document.addEventListener && document.body.addEventListener("touchstart", function (a) {
				g = a.touches[0].clientX, h = a.touches[0].clientY
			})
		},
		onDocumentReadyHandler: function () {
			b.handlers.mediaQueryHandler(), b.handlers.detectInvertFilterSupportHandler(), b.handlers.detectMousemove(), b.handlers.detectTouchstart(), b.handlers.detectTouchScrolling(), b.handlers.parentPlatformHandler(), b.handlers.menusHandler(), b.handlers.alertsPanelHandler(), b.handlers.scrollToTopAnimationHandler(), b.handlers.toolboxHandler(), b.handlers.themeSwitcherHandler(), b.handlers.legibilitySwitcherHandler(), b.handlers.mobileSwitcherHandler(), b.handlers.quickAccessMenuHandler(), b.handlers.fontResizerHandler(), b.handlers.customLayoutWidthResizerHandler(), b.handlers.lineHeightResizerHandler(), b.handlers.resetAccessibilityButtonHandler(), b.handlers.javascriptTooltipsHandler(), b.handlers.sectionExpandButtonHandler(), b.handlers.mainMenuSectionExpandButtonHandler(), b.handlers.keyboardOutlineHandler(), b.handlers.forcedOneColumnGridHandler()
		},
		onWindowLoadHandler: function () {
			b.handlers.accordionBlockSnippetHandler(), b.handlers.initialScrollHandler()
		}
	}, l.ready(b.handlers.onDocumentReadyHandler), k.load(b.handlers.onWindowLoadHandler)
}(jQuery, window.zhongFramework);